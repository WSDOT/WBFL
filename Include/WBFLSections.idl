///////////////////////////////////////////////////////////////////////
// Sections - Model bridge member cross sections
// Copyright © 1999-2014, Washington State Department of Transportation, All Rights Reserved
//                        Bridge and Structures Office
//
// This library is a part of the Washington Bridge Foundation Libraries
// and was developed as part of the Alternate Route Project
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the Alternate Route Library Open Source License as published by 
// the Washington State Department of Transportation, Bridge and Structures Office.
//
// This program is distributed in the hope that it will be useful, but is distributed 
// AS IS, WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
// or FITNESS FOR A PARTICULAR PURPOSE. See the Alternate Route Library Open Source 
// License for more details.
//
// You should have received a copy of the Alternate Route Library Open Source License 
// along with this program; if not, write to the Washington State Department of 
// Transportation, Bridge and Structures Office, P.O. Box  47340, 
// Olympia, WA 98503, USA or e-mail Bridge_Support@wsdot.wa.gov
///////////////////////////////////////////////////////////////////////

// Sections.idl : IDL source for Sections.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (Sections.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "WBFLTypes.idl";
import "WBFLTools.idl";
import "WBFLGeometry.idl";

#include <Sections.hh>

[
	uuid(8CFE60EA-6B58-4D72-B05A-E9F049C9C8CC),
	version(1.0),
	helpstring("WBFLSections Library"),
   helpcontext(IDH_WBLFSections)
]
library WBFLSections
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		object,
		uuid(866B0CBE-62C2-40D5-B12F-1168F7AF1C55),
		oleautomation,
		helpstring("IElasticProperties Interface"),
      helpcontext(IDH_IElasticProperties),
		pointer_default(unique)
	]
	interface IElasticProperties : IUnknown
	{
		[propget, helpstring("property EA"),helpcontext(IDH_IElasticProperties_EA)]
		HRESULT EA([out, retval] Float64 *pVal);

		[propput, helpstring("property EA"),helpcontext(IDH_IElasticProperties_EA)]
		HRESULT EA([in] Float64 newVal);

		[propget, helpstring("property Centroid"),helpcontext(IDH_IElasticProperties_Centroid)]
		HRESULT Centroid([out, retval] IPoint2d* *pVal);

		[propput, helpstring("property Centroid"),helpcontext(IDH_IElasticProperties_Centroid)]
		HRESULT Centroid([in] IPoint2d* newVal);

		[propget, helpstring("property EI11"),helpcontext(IDH_IElasticProperties_EI11)]
		HRESULT EI11([out, retval] Float64 *pVal);

		[propget, helpstring("property EI22"),helpcontext(IDH_IElasticProperties_EI22)]
		HRESULT EI22([out, retval] Float64 *pVal);

		[propget, helpstring("property EI12Max"),helpcontext(IDH_IElasticProperties_EI12Max)]
		HRESULT EI12Max([out, retval] Float64 *pVal);

		[propget, helpstring("property EI12Min"),helpcontext(IDH_IElasticProperties_EI12Min)]
		HRESULT EI12Min([out, retval] Float64 *pVal);

		[propget, helpstring("property EIxx"),helpcontext(IDH_IElasticProperties_EIxx)]
		HRESULT EIxx([out, retval] Float64 *pVal);

		[propput, helpstring("property EIxx"),helpcontext(IDH_IElasticProperties_EIxx)]
		HRESULT EIxx([in] Float64 newVal);

		[propget, helpstring("property EIyy"),helpcontext(IDH_IElasticProperties_EIyy)]
		HRESULT EIyy([out, retval] Float64 *pVal);

		[propput, helpstring("property EIyy"),helpcontext(IDH_IElasticProperties_EIyy)]
		HRESULT EIyy([in] Float64 newVal);

		[propget, helpstring("property EIxy"),helpcontext(IDH_IElasticProperties_EIxy)]
		HRESULT EIxy([out, retval] Float64 *pVal);

		[propput, helpstring("property EIxy"),helpcontext(IDH_IElasticProperties_EIxy)]
		HRESULT EIxy([in] Float64 newVal);

		[propget, helpstring("property Xleft"),helpcontext(IDH_IElasticProperties_Xleft)]
		HRESULT Xleft([out, retval] Float64 *pVal);

		[propput, helpstring("property Xleft"),helpcontext(IDH_IElasticProperties_Xleft)]
		HRESULT Xleft([in] Float64 newVal);

		[propget, helpstring("property Xright"),helpcontext(IDH_IElasticProperties_Xright)]
		HRESULT Xright([out, retval] Float64 *pVal);

		[propput, helpstring("property Xright"),helpcontext(IDH_IElasticProperties_Xright)]
		HRESULT Xright([in] Float64 newVal);

		[propget, helpstring("property Ytop"),helpcontext(IDH_IElasticProperties_Ytop)]
		HRESULT Ytop([out, retval] Float64 *pVal);

		[propput, helpstring("property Ytop"),helpcontext(IDH_IElasticProperties_Ytop)]
		HRESULT Ytop([in] Float64 newVal);

		[propget, helpstring("property Ybottom"),helpcontext(IDH_IElasticProperties_Ybottom)]
		HRESULT Ybottom([out, retval] Float64 *pVal);

		[propput, helpstring("property Ybottom"),helpcontext(IDH_IElasticProperties_Ybottom)]
		HRESULT Ybottom([in] Float64 newVal);

		[propget, helpstring("property Origin"),helpcontext(IDH_IElasticProperties_Origin)]
		HRESULT Origin([out, retval] IPoint2d* *pVal);

		[propput, helpstring("property Origin"),helpcontext(IDH_IElasticProperties_Origin)]
		HRESULT Origin([in] IPoint2d* newVal);

		[propget, helpstring("property Orientation"),helpcontext(IDH_IElasticProperties_Orientation)]
		HRESULT Orientation([out, retval] Float64 *pVal);

		[propput, helpstring("property Orientation"),helpcontext(IDH_IElasticProperties_Orientation)]
		HRESULT Orientation([in] Float64 newVal);

		[propget, helpstring("property CoordinateSystem"),helpcontext(IDH_IElasticProperties_CoordinateSystem)]
		HRESULT CoordinateSystem([out, retval] CoordinateSystemType *pVal);

		[propput, helpstring("property CoordinateSystem"),helpcontext(IDH_IElasticProperties_CoordinateSystem)]
		HRESULT CoordinateSystem([in] CoordinateSystemType newVal);

		[propget, helpstring("property PrincipleDirection"),helpcontext(IDH_IElasticProperties_PrincipleDirection)]
		HRESULT PrincipleDirection([out, retval] Float64 *pVal);

	   [helpstring("method AddProperties"),helpcontext(IDH_IElasticProperties_AddProperties)]
	   HRESULT AddProperties([in] IElasticProperties* props);

	   [helpstring("method TransformProperties"),helpcontext(IDH_IElasticProperties_TransformProperties)]
	   HRESULT TransformProperties([in] Float64 E,[out,retval] IShapeProperties** props);
	};
	[
		object,
		uuid(131A3B86-6EC9-4897-BA29-F1DA316BFA53),
		oleautomation,
		helpstring("IElasticPropertiesEx Interface"),
		helpcontext(IDH_IElasticProperties),
		pointer_default(unique)
	]
	interface IElasticPropertiesEx : IElasticProperties
	{
		[propget, helpstring("property StructuredStorage")/*,helpcontext(IDH_StructuredStorage)*/]
      HRESULT StructuredStorage([out, retval] IStructuredStorage2* *pStrStg);
   };
	[
		object,
		uuid(BA78A143-A0DA-4081-BAF5-C7BF7ACF9850),
		oleautomation,
		helpstring("IMassProperties Interface"),
      helpcontext(IDH_IMassProperties),
		pointer_default(unique)
	]
	interface IMassProperties : IUnknown
	{
		[propget, helpstring("property MassPerLength"),helpcontext(IDH_IMassProperties_MassPerLength)]
      HRESULT MassPerLength([out, retval] Float64 *pVal);

		[propput, helpstring("property MassPerLength"),helpcontext(IDH_IMassProperties_MassPerLength)]
      HRESULT MassPerLength([in] Float64 newVal);

		[helpstring("method AddProperties"),helpcontext(IDH_IMassProperties_AddProperties)]
      HRESULT AddProperties([in] IMassProperties* props);
	};
	[
		object,
		uuid(48A8BF49-37A3-4edf-8C59-55282D3F1133),
		oleautomation,
		helpstring("IMassPropertiesEx Interface"),
		helpcontext(IDH_IMassProperties),
		pointer_default(unique)
	]
	interface IMassPropertiesEx : IMassProperties
	{
		[propget, helpstring("property StructuredStorage")/*,helpcontext(IDH_StructuredStorage)*/]
      HRESULT StructuredStorage([out, retval] IStructuredStorage2* *pStrStg);
   };

   [
      object,
      uuid(6467790E-93DE-489b-9D3A-00F2A547A172),
      oleautomation,
      helpstring("ISection Interface"),
      helpcontext(IDH_ISection),
      pointer_default(unique)
   ]
   interface ISection : IUnknown
   {
		[propget, helpstring("property BoundingBox"),helpcontext(IDH_ISection_BoundingBox)]
      HRESULT BoundingBox([out, retval] IRect2d* *pVal);

		[propget, helpstring("property ElasticProperties"),helpcontext(IDH_ISection_ElasticProperties)]
      HRESULT ElasticProperties([out, retval] IElasticProperties* *pVal);

		[propget, helpstring("property MassProperties"),helpcontext(IDH_ISection_MassProperties)]
      HRESULT MassProperties([out, retval] IMassProperties* *pVal);

		[helpstring("method ClipIn"),helpcontext(IDH_ISection_ClipIn)]
      HRESULT ClipIn([in] IRect2d* rect,[out,retval] ISection** section);

		[helpstring("method ClipWithLine"),helpcontext(IDH_ISection_ClipWithLine)]
      HRESULT ClipWithLine([in] ILine2d* line,[out,retval] ISection** section);

		[helpstring("method Clone"),helpcontext(IDH_ISection_Clone)]
      HRESULT Clone(ISection** clone);
   };
	[
		object,
		uuid(ED88B503-F79D-4FAB-BE54-1DDCA670347B),
		oleautomation,
		helpstring("ICompositeSectionItem Interface"),
      helpcontext(IDH_ICompositeSectionItem),
		pointer_default(unique)
	]
	interface ICompositeSectionItem : IUnknown
	{
		[propget, helpstring("property Shape"),helpcontext(IDH_ICompositeSectionItem_Shape)]
      HRESULT Shape([out, retval] IShape* *pVal);

		[propputref, helpstring("property Shape"),helpcontext(IDH_ICompositeSectionItem_Shape)]
      HRESULT Shape([in] IShape* newVal);

		[propget, helpstring("property E"),helpcontext(IDH_ICompositeSectionItem_E)]
      HRESULT E([out, retval] Float64 *pVal);

		[propput, helpstring("property E"),helpcontext(IDH_ICompositeSectionItem_E)]
      HRESULT E([in] Float64 newVal);

		[propget, helpstring("property Density"),helpcontext(IDH_ICompositeSectionItem_Density)]
      HRESULT Density([out, retval] Float64 *pVal);

		[propput, helpstring("property Density"),helpcontext(IDH_ICompositeSectionItem_Density)]
      HRESULT Density([in] Float64 newVal);

		[propget, helpstring("property Void"),helpcontext(IDH_ICompositeSectionItem_Void)]
      HRESULT Void([out, retval] VARIANT_BOOL *pVal);

		[propput, helpstring("property Void"),helpcontext(IDH_ICompositeSectionItem_Void)]
      HRESULT Void([in] VARIANT_BOOL newVal);

		[propget, helpstring("property Structural"),helpcontext(IDH_ICompositeSectionItem_Structural)]
      HRESULT Structural([out, retval] VARIANT_BOOL *pVal);

		[propput, helpstring("property Structural"),helpcontext(IDH_ICompositeSectionItem_Structural)]
      HRESULT Structural([in] VARIANT_BOOL newVal);
	};
	[
		object,
		uuid(0686F3CA-9CA5-452e-839A-426F022A4420),
		oleautomation,
		helpstring("ICompositeSectionItemEx Interface"),
		helpcontext(IDH_ICompositeSectionItem),
		pointer_default(unique)
	]
	interface ICompositeSectionItemEx : ICompositeSectionItem
	{
		[propget, helpstring("property StructuredStorage")/*,helpcontext(IDH_StructuredStorage)*/]
      HRESULT StructuredStorage([out, retval] IStructuredStorage2* *pStrStg);
   };
	[
		object,
		uuid(9B65E675-01C8-11D5-8BAC-006097C68A9C),
		oleautomation,
		helpstring("ICompositeSection Interface"),
      helpcontext(IDH_ICompositeSection),
		pointer_default(unique)
	]
	interface ICompositeSection : IUnknown
	{
		[propget, helpstring("property _NewEnum")]
      HRESULT _NewEnum([out, retval] IUnknown* *pVal);

		[propget, helpstring("property Item"),helpcontext(IDH_ICompositeSection_Item)]
      HRESULT Item([in] CollectionIndexType idx, [out, retval] ICompositeSectionItem* *pVal);

		[helpstring("method AddSection"),helpcontext(IDH_ICompositeSection_AddSection)]
      HRESULT AddSection([in] IShape* shape,[in] Float64 E,[in] Float64 density,[in] VARIANT_BOOL bVoid,[in] VARIANT_BOOL bStructural);

		[helpstring("method AddSectionEx"),helpcontext(IDH_ICompositeSection_AddSectionEx)]
      HRESULT AddSectionEx([in] ICompositeSectionItem* sectionItem);

		[helpstring("method Remove"),helpcontext(IDH_ICompositeSection_Remove)]
      HRESULT Remove([in] CollectionIndexType idx);

		[propget, helpstring("property Count"),helpcontext(IDH_ICompositeSection_Count)]
      HRESULT Count([out, retval] CollectionIndexType *pVal);

		[propget, helpstring("property Section"),helpcontext(IDH_ICompositeSection_Section)]
      HRESULT Section([out, retval] ISection* *pVal);

		[propget, helpstring("property XYPosition"),helpcontext(IDH_ICompositeSection_XYPosition)]
      HRESULT XYPosition([out, retval] IXYPosition* *pVal);
	};
	[
		object,
		uuid(DE781AE1-0886-44d5-BDE6-35E6187AE241),
		oleautomation,
		helpstring("ICompositeSectionEx Interface"),
		helpcontext(IDH_ICompositeSection),
		pointer_default(unique)
	]
	interface ICompositeSectionEx : ICompositeSection
	{
		[propget, helpstring("property StructuredStorage")/*,helpcontext(IDH_StructuredStorage)*/]
      HRESULT StructuredStorage([out, retval] IStructuredStorage2* *pStrStg);
   };
	[
		object,
		uuid(D7610038-0289-11D5-8BAE-006097C68A9C),
		oleautomation,
		helpstring("ICompositeBeam Interface"),
      helpcontext(IDH_ICompositeBeam),
		pointer_default(unique)
	]
	interface ICompositeBeam : IUnknown
	{
		[propget, helpstring("property Beam"),helpcontext(IDH_ICompositeBeam_Beam)]
      HRESULT Beam([out, retval] IShape* *pVal);

		[propputref, helpstring("property Beam"),helpcontext(IDH_ICompositeBeam_Beam)]
      HRESULT Beam([in] IShape* newVal);

		[propget, helpstring("property EffectiveSlabWidth"),helpcontext(IDH_ICompositeBeam_EffectiveSlabWidth)]
      HRESULT EffectiveSlabWidth([out, retval] Float64 *pVal);

		[propput, helpstring("property EffectiveSlabWidth"),helpcontext(IDH_ICompositeBeam_EffectiveSlabWidth)]
      HRESULT EffectiveSlabWidth([in] Float64 newVal);

		[propget, helpstring("property TributarySlabWidth"),helpcontext(IDH_ICompositeBeam_TributarySlabWidth)]
      HRESULT TributarySlabWidth([out, retval] Float64 *pVal);

		[propput, helpstring("property TributarySlabWidth"),helpcontext(IDH_ICompositeBeam_TributarySlabWidth)]
      HRESULT TributarySlabWidth([in] Float64 newVal);

		[propget, helpstring("property GrossSlabDepth"),helpcontext(IDH_ICompositeBeam_GrossSlabDepth)]
      HRESULT GrossSlabDepth([out, retval] Float64 *pVal);

		[propput, helpstring("property GrossSlabDepth"),helpcontext(IDH_ICompositeBeam_GrossSlabDepth)]
      HRESULT GrossSlabDepth([in] Float64 newVal);

		[propget, helpstring("property SacrificialDepth"),helpcontext(IDH_ICompositeBeam_SacrificialDepth)]
      HRESULT SacrificialDepth([out, retval] Float64 *pVal);

		[propput, helpstring("property SacrificialDepth"),helpcontext(IDH_ICompositeBeam_SacrificialDepth)]
      HRESULT SacrificialDepth([in] Float64 newVal);

		[propget, helpstring("property SlabE"),helpcontext(IDH_ICompositeBeam_SlabE)]
      HRESULT SlabE([out, retval] Float64 *pVal);

		[propput, helpstring("property SlabE"),helpcontext(IDH_ICompositeBeam_SlabE)]
      HRESULT SlabE([in] Float64 newVal);

		[propget, helpstring("property SlabDensity"),helpcontext(IDH_ICompositeBeam_SlabDensity)]
      HRESULT SlabDensity([out, retval] Float64 *pVal);

		[propput, helpstring("property SlabDensity"),helpcontext(IDH_ICompositeBeam_SlabDensity)]
      HRESULT SlabDensity([in] Float64 newVal);

		[propget, helpstring("property HaunchWidth"),helpcontext(IDH_ICompositeBeam_HaunchWidth)]
      HRESULT HaunchWidth([out, retval] Float64 *pVal);

		[propput, helpstring("property HaunchWidth"),helpcontext(IDH_ICompositeBeam_HaunchWidth)]
      HRESULT HaunchWidth([in] Float64 newVal);

		[propget, helpstring("property HaunchDepth"),helpcontext(IDH_ICompositeBeam_HaunchDepth)]
      HRESULT HaunchDepth([out, retval] Float64 *pVal);

		[propput, helpstring("property HaunchDepth"),helpcontext(IDH_ICompositeBeam_HaunchDepth)]
      HRESULT HaunchDepth([in] Float64 newVal);

		[propget, helpstring("property Section"),helpcontext(IDH_ICompositeBeam_Section)]
      HRESULT Section([out, retval] ISection* *pVal);

		[propget, helpstring("property XYPosition"),helpcontext(IDH_ICompositeBeam_XYPosition)]
      HRESULT XYPosition([out, retval] IXYPosition* *pVal);

		[propget, helpstring("property BeamE"),helpcontext(IDH_ICompositeBeam_BeamE)]
      HRESULT BeamE([out, retval] Float64 *pVal);

		[propput, helpstring("property BeamE"),helpcontext(IDH_ICompositeBeam_BeamE)]
      HRESULT BeamE([in] Float64 newVal);

		[propget, helpstring("property BeamDensity"),helpcontext(IDH_ICompositeBeam_BeamDensity)]
      HRESULT BeamDensity([out, retval] Float64 *pVal);

		[propput, helpstring("property BeamDensity"),helpcontext(IDH_ICompositeBeam_BeamDensity)]
      HRESULT BeamDensity([in] Float64 newVal);

		[propget, helpstring("property QSlab"),helpcontext(IDH_ICompositeBeam_QSlab)]
      HRESULT QSlab([out, retval] Float64 *pVal);

		[propget, helpstring("property Q"),helpcontext(IDH_ICompositeBeam_Q)]
      HRESULT Q([in] Float64 location, [out, retval] Float64 *pVal);
	};
	[
		object,
		uuid(224214B2-02D3-4c49-8295-A38E082F2AA0),
		oleautomation,
		helpstring("ICompositeBeamEx Interface"),
		helpcontext(IDH_ICompositeBeam),
		pointer_default(unique)
	]
	interface ICompositeBeamEx : ICompositeBeam
	{
		[propget, helpstring("property StructuredStorage")/*,helpcontext(IDH_StructuredStorage)*/]
      HRESULT StructuredStorage([out, retval] IStructuredStorage2* *pStrStg);
   };

	[
		uuid(FD7B2E32-6DB3-4BF2-8A0A-484B19FD1CE6),
		helpstring("ElasticProperties Class"),
      helpcontext(IDH_IElasticProperties)
	]
	coclass ElasticProperties
	{
		[default] interface IElasticPropertiesEx;
      interface IElasticProperties;
      interface IStructuredStorage2;
        // interface IPersist;
	};
	[
		uuid(3925A3FA-34CD-4E06-AEDF-BCD1773E0810),
		helpstring("MassProperties Class"),
      helpcontext(IDH_IMassProperties)
	]
	coclass MassProperties
	{
		[default] interface IMassPropertiesEx;
      interface IMassProperties;
      interface IStructuredStorage2;
        // interface IPersist;
	};
	[
		uuid(9A0C379F-0945-41E5-8053-FD77B4FDBF59),
		helpstring("CompositeSectionItem Class"),
      helpcontext(IDH_ICompositeSectionItem)
	]
	coclass CompositeSectionItem
	{
		[default] interface ICompositeSectionItemEx;
      interface ICompositeSectionItem;
      interface IStructuredStorage2;
        // interface IPersist;
	};
	[
		uuid(9B65E676-01C8-11D5-8BAC-006097C68A9C),
		helpstring("CompositeSection Class"),
      helpcontext(IDH_ICompositeSection)
	]
	coclass CompositeSection
	{
		[default] interface ICompositeSectionEx;
		interface ICompositeSection;
		interface ISection;
		interface IXYPosition;
      interface IStructuredStorage2;
        // interface IPersist;
	};
	[
		uuid(D7610039-0289-11D5-8BAE-006097C68A9C),
		helpstring("CompositeBeam Class"),
      helpcontext(IDH_ICompositeBeam)
	]
	coclass CompositeBeam
	{
		[default] interface ICompositeBeamEx;
		interface ICompositeBeam;
      interface IStructuredStorage2;
        // interface IPersist;
	};
};
