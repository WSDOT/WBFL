<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Document Conventions</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=topic-status content="In Progress">
<meta name=topic-priority content=0>
<meta name=topic-time-estimate content=0>
<meta name=topic-comment content>
<meta name=topic-id content>
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=0>
<meta name=layout-height content=0>
<meta name=layout-width content=0>


<!--(Links)=========================================================-->

<link REL=StyleSheet HREF=default.css>



</head>

<!--(Body)==========================================================-->


<body>

<h1>Document Conventions</h1>

<p>The majority of this help file is written in a conversational style, 
 and hence has few formal conventions. However, the API documentation has 
 some conventions that you should be aware of:</p>

<h2>Objects and Interfaces</h2>

<p>Most of the documentation in this help system is oriented toward Visual 
 Basic users and is written in a format that VB users are used to. However, 
 some of the sections in the API documentation are broken down into &quot;Objects&quot; 
 and &quot;Interfaces&quot;. VB users should be accustomed to dealing with 
 Objects on a regular basis. However, the term &quot;Interfaces&quot; might 
 cause some confusion.</p>

<p>For the purpose of this document, &quot;Objects&quot; are the creatable 
 objects that are part of the system. This means they can be created via 
 the standard &quot;New&quot;, or &quot;Dim as New&quot; VB syntax. Interfaces, 
 for our discussion, are not creatable. They must be obtained by assigning 
 a reference to an existing object. For example, the following code fragment 
 shows how to create a new PointLoad object and obtain the IStructuredStorage2 
 interface from it.</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		wrapperparagraphselector=LISTING
		style="width: 100%; border-spacing: 0px;"
		cellspacing=0
		width=100%>

<tr>
<td style="x-cell-content-align: TOP;
			width: 9%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=9%>
<p>&nbsp;</td>
<td style="x-cell-content-align: TOP;
			width: 91%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=91%>
<p class=Listing
	style="margin-bottom: 0;">Dim pointLoad as new PointLoad<br>
Dim ss2 as IStructuredStorage2<br>
set ss2 = pointLoad</td></tr>
</table>

<p>&nbsp;</p>

<h2>Meanings of [in] and [out]</h2>

<p>For some methods, it is not obvious which variables are passed in and 
 which are returned back. In this case, we use the adornments [in] and 
 [out] to make this distinguishment. Note that the adornments are not used 
 in the documentation of all methods.</p>


<!--(HR)============================================================-->
<hr style="height: 2px;
			width: 100%;
			float: aligncenter;"
	size=2
	width=100%
	align=center>


<p style="margin-bottom: 0;">Copyright © 2000-2002, Washington State Department 
 of Transportation </p>

</body>

</html>
