<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Object Model</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=topic-status content="In Progress">
<meta name=topic-check-list content="Ran Smart Index">
<meta name=topic-priority content=0>
<meta name=topic-time-estimate content=0>
<meta name=topic-comment content>
<meta name=topic-id content>
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=0>
<meta name=layout-height content=0>
<meta name=layout-width content=0>


<!--(Links)=========================================================-->

<link REL=StyleSheet HREF="..\default.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1>LBAM Object Models</h1>

<p>Objects are the fundamental building blocks of COM and Visual Basic 
 applications; nearly everything you do in Visual Basic involves manipulating 
 objects. Every unit functionality in the LBAM is an object that you can 
 control programmatically.</p>

<p>This chapter gives you a conceptual overview of the objects and object 
 models in the LBAM system. For more information about using a particular 
 object model, object, or interface for a particular application, see the 
 API documentation in this book that's devoted to working with that object 
 model.</p>

<h2>Overview of Object Models</h2>

<p>Before you can programmatically gain access to an application's content 
 and functionality, it's important to understand how the content and functionality 
 of the application is partitioned into discrete objects and how these 
 objects are arranged in a hierarchical model.</p>

<h2>What Are Objects and Object Models?</h2>

<p>The content and functionality in the LBAM system are broken down into 
 discrete units of related content and functionality called objects. Being 
 a bridge engineer, most of the objects in the LBAM system such as Spans, 
 Supports, and PointLoads should look very familiar (In fact, hopefully 
 intuitive).</p>

<p>You can think of the object model diagrams in this section as a &quot;road 
 map&quot; for programming the LBAM. The following diagrams show the high-level 
 relationships between the COM objects in the LBAM system. If you plan 
 to do some programming using the engine, it is probably worth printing 
 these diagrams and keeping them close at hand.</p>

<p>The overall object model for the LBAM is fairly large, hence the diagrams 
 must be broken up to allow digestion of the overall picture. We present 
 the object models in three sections:</p>

<ol>
	
	<li class=kadov-P><p><span style="font-weight: bold;">LBAM Model</span> 
 - This section is used to document the part of the LBAM system used to 
 describe the model, e.g., the geometry, boundary conditions, structural 
 properties, and loads.</p></li>
	
	<li class=kadov-P><p><span style="font-weight: bold;">LBAM Analysis 
 - Simplified View</span> - This section documents the LBAMAnalysisEngine 
 object, which provides a simplified method for setting up the analysis 
 of an LBAM. The section also documents the various results objects that 
 are used to return structural responses.</p></li>
	
	<li class=kadov-P><p><span style="font-weight: bold;">LBAM Analysis 
 - Detailed View</span> - This section provides a more detailed view of 
 the objects that are used to perform various types of analyses on the 
 LBAM.</p></li>
</ol>

<h3>NOTE:</h3>

<p>When browsing the object models, you may notice that the event handling 
 (IConnectionPoint) interfaces are not shown for all objects in the diagram. 
 These interfaces are not shown for the sake of clarity. Event broadcasting 
 in the LBAM is extremely fine-grained. In fact, nearly all of the objects 
 in the LBAM model broadcast events when they are changed. These events 
 also cascade up the model hierarchy to the Model object itself. You will 
 need to refer the the API documentation and source code for detailed information 
 about event handling.</p>


<!--(HR)============================================================-->
<hr style="height: 2px;
			width: 100%;
			float: aligncenter;"
	size=2
	width=100%
	align=center>


<p>Copyright © 2000-2003, Washington State Department of Transportation</p>

<p style="margin-bottom: 0;">&nbsp; </p>

</body>

</html>
