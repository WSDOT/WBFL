<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>A Simple Example</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=topic-status content="In Progress">
<meta name=topic-priority content=0>
<meta name=topic-time-estimate content=0>
<meta name=topic-comment content>
<meta name=topic-id content>
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=0>
<meta name=layout-height content=0>
<meta name=layout-width content=0>


<!--(Links)=========================================================-->

<link REL=StyleSheet HREF="..\default.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1>A Simple Example</h1>

<p>This section presents source for a simple example written in VBA for 
 Excel. It demonstrates how to use the utility components to build a simple 
 three-span model, apply a uniform load to it, and compute mid-span moments. 
 A schematic of the model is shown below.</p>

<p style="text-align: center;"
	align=center><img src="..\Images\SimpleSample.gif"
						style="width: 564px;
								height: 280px;
								border-style: none;
								margin-top: 0px;
								margin-bottom: 0px;
								margin-left: 0px;
								margin-right: 0px;"
						width=564
						height=280
						border=0></p>

<p style="text-align: left;"
	align=left>To see the code in action, open the &quot;SimpleSample.xls&quot; 
 file in the Samples directory.</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		wrapperparagraphselector=P
		style="width: 100%;
				border-spacing: 0px;
				margin-top: 14pt;"
		cellspacing=0
		width=100%>

<tr>
<td style="x-cell-content-align: TOP;
			width: 20%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=20%>
<p>&nbsp;</td>
<td style="x-cell-content-align: TOP;
			width: 100%;
			padding-left: 2px;
			padding-top: 2px;
			padding-right: 2px;
			padding-bottom: 2px;"
	valign=top
	width=100%>
<p class=Listing>Option Explicit<br>
Option Base 0</p>
<p class=Listing>Private Sub Go_Click()</p>
<p class=Listing>' Create our model factory<br>
Dim factory As New LRFDFactory</p>
<p class=Listing>' Set up span lengths of 50, 100, 50<br>
Dim span_lengths As New DblArray<br>
span_lengths.Add 50<br>
span_lengths.Add 100<br>
span_lengths.Add 50</p>
<p class=Listing>' Use factory to create model with E=1.0, I=1.0, A=1.0 
 and depth=1.0<br>
' Factory always creates a default stage named &quot;Stage 1&quot;<br>
Dim mdl As LBAMModel<br>
Set mdl = factory.CreateSimpleModel(span_lengths, 1, 1, 1, 1)</p>
<p class=Listing>' We need a load group to put our load in<br>
Dim self_weight_lg As New LoadGroup<br>
self_weight_lg.Name = &quot;Self Weight&quot;<br>
mdl.LoadGroups.Add self_weight_lg</p>
<p class=Listing>' Create a vertical distributed load with value of -1.0 
 across the<br>
' entire superstructure<br>
Dim dl As New DistributedLoad<br>
dl.Direction = ldFy<br>
dl.MemberType = mtSuperstructureMember<br>
dl.MemberID = 0<br>
dl.StartLocation = 0<br>
dl.EndLocation = -1<br>
dl.WStart = -1<br>
dl.WEnd = -1<br>
mdl.DistributedLoads.Add &quot;Stage 1&quot;, &quot;Self Weight&quot;, 
 dl</p>
<p class=Listing>' Place POIs half-points along spans (1 through 9)<br>
Dim i As Long<br>
i = factory.GeneratePOIsOnSuperstructure(mdl, 1, 2)</p>
<p class=Listing>' Set up our engine to perform analysis on force properties 
 of model<br>
Dim engine As New LBAMAnalysisEngine<br>
engine.Initialize mdl, atForce</p>
<p class=Listing>' Request results at POIs at middle of each span.<br>
' First need to create long array with desired poi ids.<br>
Dim poi_ids As New LngArray<br>
poi_ids.Add 2<br>
poi_ids.Add 5<br>
poi_ids.Add 8</p>
<p class=Listing>' Request/Compute results<br>
Dim results As ISectionResult3Ds<br>
Set results = engine.LoadGroupResponse.ComputeForces(&quot;Self Weight&quot;, 
 poi_ids, &quot;Stage 1&quot;, roMember, rsIncremental)</p>
<p class=Listing>' Print results out to &quot;Immediate&quot; window<br>
Debug.Print &quot; Mid-Span Moments&quot;<br>
Debug.Print &quot; Span 1 = &quot;; results(0).ZLeft<br>
Debug.Print &quot; Span 2 = &quot;; results(1).ZLeft<br>
Debug.Print &quot; Span 3 = &quot;; results(2).ZLeft</p>
<p class=Listing>End Sub</p>
<p class=Listing
	style="margin-bottom: 0;">&nbsp;</td></tr>
</table>


<!--(HR)============================================================-->
<hr style="height: 2px;
			width: 100%;
			float: aligncenter;"
	size=2
	width=100%
	align=center>


<p style="margin-bottom: 0;">Copyright © 2000-2002, Washington State Department 
 of Transportation </p>

</body>

</html>
